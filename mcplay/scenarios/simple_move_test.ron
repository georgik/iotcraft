// Simple Movement Test
// Test single client movement and position tracking
Scenario(
    name: "simple_move_test",
    description: "Test player movement and position tracking on a single client",
    version: "1.0",

    infrastructure: InfrastructureConfig(
        mqtt_server: MqttServerConfig(
            required: true,
            port: 1883,
            config_file: None,
            options: None,
        ),
        mqtt_observer: None,
        mcp_server: None,
        services: None,
    ),

    clients: [
        ClientConfig(
            id: "alice",
            player_id: "alice",
            mcp_port: 3001,
            client_type: "desktop",
            name: Some("Alice"),
            config: None,
        ),
    ],

    steps: [
        Step(
            name: "alice_initialize",
            description: "Initialize MCP for Alice",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "initialize",
                arguments: {
                    "protocolVersion": "2024-11-05",
                    "capabilities": { "tools": {} },
                    "clientInfo": {"name": "mcplay", "version": "1.0"}
                },
            ),
            wait_before: 200,
            wait_after: 300,
            timeout: 15000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: [],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        Step(
            name: "alice_create_world",
            description: "Alice creates a world",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "create_world",
                arguments: { "world_name": "test_world", "description": "Test world" },
            ),
            wait_before: 200,
            wait_after: 1200,
            timeout: 20000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: ["alice_initialize"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        Step(
            name: "alice_publish_world",
            description: "Alice publishes the world",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "publish_world",
                arguments: { "world_name": "test_world", "max_players": 2, "is_public": true },
            ),
            wait_before: 200,
            wait_after: 1000,
            timeout: 20000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: ["alice_create_world"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        Step(
            name: "alice_initial_status",
            description: "Get Alice's initial position",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "get_multiplayer_status",
                arguments: {},
            ),
            wait_before: 300,
            wait_after: 300,
            timeout: 15000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: ["alice_publish_world"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        Step(
            name: "alice_moves",
            description: "Alice moves to specific coordinates",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "player_move",
                arguments: { "x": 5.0, "y": 3.0, "z": 7.0 },
            ),
            wait_before: 300,
            wait_after: 1000,
            timeout: 15000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: ["alice_initial_status"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        Step(
            name: "alice_final_status",
            description: "Get Alice's position after movement",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "get_multiplayer_status",
                arguments: {},
            ),
            wait_before: 500,
            wait_after: 300,
            timeout: 15000,
            success_condition: Some(( type: "mcp_response", expected: "success" )),
            depends_on: ["alice_moves"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
    ],

    config: Some(ScenarioConfig(
        timeout_ms: Some(120000),
        logging: Some(LoggingConfig(
            level: Some("debug"),
            log_mqtt: Some(true),
            log_client_actions: Some(true),
            filters: Some([
                "mcp/*",
                "multiplayer/*",
                "get_multiplayer_status",
                "player_move",
                "player_positions",
                "PlayerMoveEvent",
                "handle_player_move_events",
            ]),
        )),
        environment: Some({
            "RUST_LOG": "debug,iotcraft_desktop_client=debug",
            "SCENARIO_NAME": "simple_move_test",
            "ENABLE_MCP": "true",
        }),
        settings: Some({
            "auto_cleanup": true,
            "preserve_logs": true,
            "fail_fast": true,
        }),
    )),
)
