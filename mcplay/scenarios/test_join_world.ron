( 
  name: "Test Join World Command",
  description: "Simple test to debug the join_world MCP command issue",
  version: "1.0",
  infrastructure: (
    mqtt_server: (
      required: true,
      port: 1883,
      config_file: None,
      options: None,
    ),
    mqtt_observer: Some((
      required: true, 
      topics: Some(["#"]),
      client_id: Some("observer_join_test"),
    )),
    mcp_server: None,
    services: None,
  ),
  clients: [
    (
      id: "alice",
      player_id: "alice",
      mcp_port: 3001,
      client_type: "desktop",
      name: Some("Alice - Share World Publisher"),
      config: Some({
        "enable_mcp": true,
        "readiness_probe": {
          "type": "tcp_port", 
          "port": 3001,
          "initial_delay_seconds": 5,
          "timeout_seconds": 10
        },
        "liveness_probe": {
          "type": "mcp_ping",
          "interval_seconds": 30,
          "timeout_seconds": 10,
          "failure_threshold": 5
        }
      }),
    ),
    (
      id: "bob",
      player_id: "bob",
      mcp_port: 3002,
      client_type: "desktop",
      name: Some("Bob - Join World Client"),
      config: Some({
        "enable_mcp": true,
        "readiness_probe": {
          "type": "tcp_port", 
          "port": 3002,
          "initial_delay_seconds": 5,
          "timeout_seconds": 10
        },
        "liveness_probe": {
          "type": "mcp_ping",
          "interval_seconds": 30,
          "timeout_seconds": 10,
          "failure_threshold": 5
        }
      }),
    )
  ],
  steps: [
    // Alice checks client info
    (
      name: "alice_get_client_info",
      description: "Alice checks her client status",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "get_client_info",
        arguments: {},
      ),
      depends_on: [],
      wait_before: 1000,
      wait_after: 2000,
      timeout: 10000,
      success_condition: None,
    ),
    
    // Alice creates a world
    (
      name: "alice_create_world",
      description: "Alice creates a new world for testing multiplayer",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "create_world",
        arguments: {
          "world_name": "test_multiplayer_world",
          "description": "A test world for multiplayer",
          "template": "medieval"
        },
      ),
      depends_on: ["alice_get_client_info"],
      wait_before: 1000,
      wait_after: 3000,
      timeout: 30000,
      success_condition: None,
    ),
    
    // Alice publishes the world
    (
      name: "alice_publish_world",
      description: "Alice publishes her world for multiplayer",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "publish_world",
        arguments: {
          "world_name": "test_multiplayer_world",
          "max_players": 4,
          "is_public": true
        },
      ),
      depends_on: ["alice_create_world"],
      wait_before: 1000,
      wait_after: 3000,
      timeout: 15000,
      success_condition: None,
    ),
    
    // Bob checks client info 
    (
      name: "bob_get_client_info",
      description: "Bob checks his client status",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_client_info",
        arguments: {},
      ),
      depends_on: ["alice_publish_world"],
      wait_before: 1000,
      wait_after: 1000,
      timeout: 10000,
      success_condition: None,
    ),
    
    // Bob lists available online worlds
    (
      name: "bob_list_online_worlds",
      description: "Bob checks available multiplayer worlds",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "list_online_worlds",
        arguments: {},
      ),
      depends_on: ["bob_get_client_info"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: 10000,
      success_condition: None,
    ),
    
    // Bob joins Alice's published world (this is the correct command for multiplayer)
    (
      name: "bob_join_world",
      description: "Bob joins Alice's published world",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "join_world",
        arguments: {
          "world_id": "test_multiplayer_world" 
        },
      ),
      depends_on: ["bob_list_online_worlds"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: 30000,
      success_condition: None,
    ),
    
    // Bob verifies he's in the game
    (
      name: "bob_verify_game_state",
      description: "Bob verifies he's in the game after joining",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_game_state",
        arguments: {},
      ),
      depends_on: ["bob_join_world"],
      wait_before: 1000,
      wait_after: 1000,
      timeout: 10000,
      success_condition: None,
    ),
  ],
  config: Some((
    timeout_ms: Some(180000),  // 3 minutes max runtime
    logging: None,
    environment: None,
    settings: Some({
      "cleanup_on_exit": true,
      "keep_logs": true
    }),
  )),
)
