// Simple MQTT Publishing Test - Validate Async MQTT Publishing
// Focuses only on the publish_world MCP command to verify MQTT messages appear
(
    name: "simple_mqtt_publish_test", 
    description: "Simple test to verify async MQTT publishing works - Alice creates and publishes world, MQTT observer should see messages",
    version: "1.0",
    
    // Essential infrastructure for MQTT testing
    infrastructure: (
        mqtt_server: (
            required: true,
            port: 1883,
            config_file: None,
            options: None,
        ),
        mqtt_observer: Some((
            required: true,
            topics: Some([
                // Key world publishing topics to monitor
                "iotcraft/worlds/+/info",
                "iotcraft/worlds/+/data",
                "iotcraft/worlds/+/data/chunk",
                // Catch-all for debugging
                "#"
            ]),
            client_id: Some("simple_mqtt_publish_observer"),
        )),
        mcp_server: None,
        services: None,
    ),
    
    // Single Alice client 
    clients: [
        (
            id: "alice",
            player_id: "alice_publisher", 
            mcp_port: 8080,
            client_type: "desktop",
            name: Some("Alice (Simple MQTT Publishing Test)"),
            config: Some({
                "enable_mcp": true,
                "readiness_probe": {
                    "type": "tcp_port",
                    "port": 8080,
                    "initial_delay_seconds": 5,
                    "timeout_seconds": 20
                },
                "liveness_probe": {
                    "type": "mcp_ping",
                    "interval_seconds": 45,
                    "timeout_seconds": 10,
                    "failure_threshold": 3
                }
            }),
        ),
    ],
    
    // Minimal steps - focus on MQTT publishing only
    steps: [
        // Step 1: Quick ping test to verify MCP connectivity
        (
            name: "alice_ping",
            description: "Alice tests basic MCP connectivity",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "ping",
                arguments: {},
            ),
            wait_before: 1000,
            wait_after: 500,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: [],
        ),
        
        // Step 2: Create a simple world (avoid templates to prevent freezing)
        (
            name: "alice_create_simple_world",
            description: "Alice creates a simple world (no template) to avoid complex operations",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "create_world",
                arguments: {
                    "world_name": "simple_mqtt_test",
                    "description": "Simple world for MQTT publishing test"
                    // No template specified - should use minimal default
                },
            ),
            wait_before: 1000,
            wait_after: 2000,  
            timeout: 20000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_ping"],
        ),
        
        // Step 3: CRITICAL TEST - Publish world to MQTT 
        (
            name: "alice_publish_world",
            description: "ðŸš¨ CRITICAL: Alice publishes world to MQTT - this should generate iotcraft/worlds/*/info and iotcraft/worlds/*/data messages",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "publish_world",
                arguments: {
                    "world_name": "simple_mqtt_test",
                    "max_players": 4,
                    "is_public": true
                },
            ),
            wait_before: 1000,
            wait_after: 10000,  // Extended wait to capture all MQTT messages
            timeout: 25000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_create_simple_world"],
        ),
    ],
    
    // Simple configuration
    config: Some((
        timeout_ms: Some(120000),  // 2 minutes should be plenty
        logging: None,
        environment: None,
        settings: Some({
            "auto_cleanup": true,
            "preserve_logs": true,
        }),
    )),
)
