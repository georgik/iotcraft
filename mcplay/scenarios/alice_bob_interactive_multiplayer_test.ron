// Alice Bob Interactive Multiplayer Test
// Tests not just connection, but actual interactive multiplayer gameplay
// Both players place blocks, move around, and test real-time synchronization
Scenario(
    name: "alice_bob_interactive_multiplayer_test",
    description: "Alice and Bob full interactive multiplayer test with block placement, movement, and real-time synchronization verification",
    version: "1.0",
    
    // Full infrastructure
    infrastructure: InfrastructureConfig(
        mqtt_server: MqttServerConfig(
            required: true,
            port: 1883,
            config_file: None,
            options: None,
        ),
        mqtt_observer: Some(MqttObserverConfig(
            required: true,
            topics: Some([
                "iotcraft/worlds/+/info",
                "iotcraft/worlds/+/data", 
                "iotcraft/worlds/+/players/+/pose",
                "iotcraft/multiplayer/+/blocks/+",
                "#"  // Monitor all topics for debugging
            ]),
            client_id: Some("alice_bob_interactive_observer"),
        )),
        mcp_server: None,
        services: None,
    ),
    
    // Two clients: Alice (host) and Bob (joiner)
    clients: [
        ClientConfig(
            id: "alice",
            player_id: "alice", 
            mcp_port: 8080,
            client_type: "desktop",
            name: Some("Alice (Interactive Host)"),
            config: Some({
                "enable_mcp": true,
                "readiness_probe": {
                    "type": "tcp_port",
                    "port": 8080,
                    "initial_delay_seconds": 5,
                    "timeout_seconds": 15
                },
                "liveness_probe": {
                    "type": "mcp_ping",
                    "interval_seconds": 30,
                    "timeout_seconds": 10,
                    "failure_threshold": 3
                }
            }),
        ),
        ClientConfig(
            id: "bob",
            player_id: "bob", 
            mcp_port: 8081,
            client_type: "desktop",
            name: Some("Bob (Interactive Joiner)"),
            config: Some({
                "enable_mcp": true,
                "readiness_probe": {
                    "type": "tcp_port",
                    "port": 8081,
                    "initial_delay_seconds": 5,
                    "timeout_seconds": 15
                },
                "liveness_probe": {
                    "type": "mcp_ping",
                    "interval_seconds": 30,
                    "timeout_seconds": 10,
                    "failure_threshold": 3
                }
            }),
        ),
    ],
    
    // Interactive multiplayer workflow (21 steps total)
    steps: [
        // PHASE 1: Setup and Connection (Steps 1-8)
        Step(
            name: "alice_mcp_initialize",
            description: "Alice initializes MCP for interactive multiplayer session",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "initialize",
                arguments: {
                    "protocolVersion": "2024-11-05",
                    "capabilities": { "tools": {} },
                    "clientInfo": {
                        "name": "alice-interactive-host",
                        "version": "1.0.0"
                    }
                },
            ),
            wait_before: 1000,
            wait_after: 500,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: [],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_mcp_initialize",
            description: "Bob initializes MCP for interactive multiplayer session",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "initialize",
                arguments: {
                    "protocolVersion": "2024-11-05",
                    "capabilities": { "tools": {} },
                    "clientInfo": {
                        "name": "bob-interactive-joiner",
                        "version": "1.0.0"
                    }
                },
            ),
            wait_before: 500,
            wait_after: 500,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_mcp_initialize"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "alice_create_interactive_world",
            description: "Alice creates an interactive world for multiplayer building",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "create_world",
                arguments: {
                    "world_name": "alice_bob_interactive_world",
                    "description": "Interactive multiplayer building world",
                    "template": "default"  // Default template for reliable testing
                },
            ),
            wait_before: 1000,
            wait_after: 3000,
            timeout: 30000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_mcp_initialize"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "alice_set_ingame_state",
            description: "Alice enters InGame state for interactive session",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "set_game_state",
                arguments: {
                    "state": "InGame"
                },
            ),
            wait_before: 1000,
            wait_after: 1000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_create_interactive_world"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "alice_publish_interactive_world",
            description: "Alice publishes the interactive world for Bob to join",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "publish_world",
                arguments: {
                    "world_name": "alice_bob_interactive_world",
                    "max_players": 2,
                    "is_public": true
                },
            ),
            wait_before: 1000,
            wait_after: 3000,
            timeout: 20000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_set_ingame_state"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_discover_interactive_worlds",
            description: "Bob discovers Alice's interactive world",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "list_online_worlds",
                arguments: {},
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_publish_interactive_world"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_join_interactive_world",
            description: "Bob joins Alice's interactive world",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "join_world",
                arguments: {
                    "world_id": "alice_bob_interactive_world"
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 25000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_discover_interactive_worlds"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_load_world_from_mqtt",
            description: "Bob loads the complete world data from MQTT to synchronize with Alice",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "load_world_from_mqtt",
                arguments: {
                    "world_name": "alice_bob_interactive_world"
                },
            ),
            wait_before: 1000,
            wait_after: 3000, // Wait for world reconstruction
            timeout: 30000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_join_interactive_world"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_set_ingame_state",
            description: "Bob enters InGame state for interactive session",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "set_game_state",
                arguments: {
                    "state": "InGame"
                },
            ),
            wait_before: 1000,
            wait_after: 1000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_load_world_from_mqtt"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        // PHASE 2: Interactive Block Placement (Steps 9-16)
        Step(
            name: "alice_place_signature_block",
            description: "Alice places her signature block in the world",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "place_block",
                arguments: {
                    "block_type": "stone",
                    "x": 20,
                    "y": 1,
                    "z": 20
                },
            ),
            wait_before: 1000,
            wait_after: 2000, // Wait for MQTT synchronization
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_set_ingame_state"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_place_signature_block",
            description: "Bob places his signature block in the world",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "place_block",
                arguments: {
                    "block_type": "quartz_block",
                    "x": -20,
                    "y": 1,
                    "z": -20
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_place_signature_block"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "alice_build_structure",
            description: "Alice builds a small structure using wall command",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "create_wall",
                arguments: {
                    "block_type": "grass",
                    "x1": 18,
                    "y1": 1,
                    "z1": 18,
                    "x2": 22,
                    "y2": 3,
                    "z2": 22
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 20000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_place_signature_block"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_build_structure",
            description: "Bob builds a small structure using wall command",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "create_wall",
                arguments: {
                    "block_type": "dirt",
                    "x1": -22,
                    "y1": 1,
                    "z1": -22,
                    "x2": -18,
                    "y2": 3,
                    "z2": -18
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 20000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_build_structure"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        // PHASE 3: Movement and Position Testing (Steps 13-16)
        Step(
            name: "alice_move_to_center",
            description: "Alice moves to the center of the world",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "player_move",
                arguments: {
                    "x": 0.0,
                    "y": 2.0,
                    "z": 0.0
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_build_structure"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_move_to_center",
            description: "Bob moves to the center to meet Alice",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "player_move",
                arguments: {
                    "x": 5.0,
                    "y": 2.0,
                    "z": 5.0
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_move_to_center"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        // PHASE 4: Collaborative Building (Steps 15-18)
        Step(
            name: "alice_place_collaborative_block",
            description: "Alice places a block in the collaborative area",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "place_block",
                arguments: {
                    "block_type": "glass_pane",
                    "x": 0,
                    "y": 3,
                    "z": 0
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_move_to_center"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_place_collaborative_block",
            description: "Bob places a block next to Alice's block",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "place_block",
                arguments: {
                    "block_type": "cyan_terracotta",
                    "x": 1,
                    "y": 3,
                    "z": 0
                },
            ),
            wait_before: 1000,
            wait_after: 2000,
            timeout: 15000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_place_collaborative_block"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        // PHASE 5: Final Status Validation (Steps 17-20)
        Step(
            name: "alice_check_final_multiplayer_status",
            description: "Alice checks final multiplayer status after interactive session",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "get_multiplayer_status",
                arguments: {},
            ),
            wait_before: 1000,
            wait_after: 1000,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_place_collaborative_block"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_check_final_multiplayer_status",
            description: "Bob checks final multiplayer status after interactive session",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "get_multiplayer_status",
                arguments: {},
            ),
            wait_before: 500,
            wait_after: 1000,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_check_final_multiplayer_status"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "alice_final_world_status",
            description: "Alice checks final world status - should show all placed blocks",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "get_world_status",
                arguments: {},
            ),
            wait_before: 500,
            wait_after: 1000,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["bob_check_final_multiplayer_status"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_final_world_status",
            description: "Bob checks final world status - should match Alice's block count",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "get_world_status",
                arguments: {},
            ),
            wait_before: 500,
            wait_after: 2000,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: ["alice_final_world_status"],
            timing: None,
            conditions: None,
            expectations: None,
        ),
    ],
    
    // Configuration for interactive multiplayer testing
    config: Some(ScenarioConfig(
        timeout_ms: Some(300000), // 5 minutes for interactive testing
        logging: Some(LoggingConfig(
            level: Some("info"),
            log_mqtt: Some(true),
            log_client_actions: Some(true),
            filters: Some([
                "mcp/*", 
                "multiplayer/*",
                "world/*",
                "interactive/*",
                "block_placement/*",
                "player_movement/*",
                "create_world",
                "publish_world",
                "join_world",
                "place_block",
                "create_wall",
                "player_move",
                "set_game_state",
                "get_game_state",
                "get_world_status",
                "get_multiplayer_status",
                "list_online_worlds",
                "collaborative/*",
                "synchronization/*"
            ]),
        )),
        environment: Some({
            "RUST_LOG": "info,iotcraft_desktop_client=debug,iotcraft_desktop_client::multiplayer=trace",
            "SCENARIO_NAME": "alice_bob_interactive_multiplayer_test",
            "ENABLE_MCP": "true",
            "ENABLE_MULTIPLAYER": "true",
        }),
        settings: Some({
            "auto_cleanup": true,
            "preserve_logs": true,
            "fail_fast": false, // Continue even if individual blocks fail
            "detailed_reporting": true,
        }),
    )),
)
