// Inventory Independence Test
// Tests that remote block placement works independently of receiver's inventory
Scenario(
    name: "alice_bob_inventory_independent_test",
    description: "Test that remote block placement works independently of receiver's inventory - Alice has blocks, Bob has none, but Bob should see Alice's blocks",
    version: "1.0",
    
    infrastructure: InfrastructureConfig(
        mqtt_server: MqttServerConfig(
            required: true,
            port: 1883,
            config_file: None,
            options: None,
        ),
        mqtt_observer: Some(MqttObserverConfig(
            required: true,
            topics: Some([
                "iotcraft/worlds/+/info",
                "iotcraft/worlds/+/data",
                "iotcraft/worlds/+/state/+",
                "#"  // Monitor all topics
            ]),
            client_id: Some("inventory_test_observer"),
        )),
        mcp_server: None,
        services: None,
    ),
    
    clients: [
        ClientConfig(
            id: "alice",
            player_id: "alice",
            mcp_port: 8080,
            client_type: "desktop",
            name: Some("Alice (Has Inventory)"),
            config: None,
        ),
        ClientConfig(
            id: "bob",
            player_id: "bob",
            mcp_port: 8081,
            client_type: "desktop",
            name: Some("Bob (Empty Inventory)"),
            config: None,
        ),
    ],
    
    steps: [
        // Initialize both clients
        Step(
            name: "alice_mcp_initialize",
            description: "Initialize Alice's MCP connection",
            client: "alice",
            action: (
                type: "mcp_call",
                tool: "initialize",
                arguments: {
                    "protocolVersion": "2024-11-05",
                    "capabilities": { "tools": {} },
                    "clientInfo": {
                        "name": "alice-inventory-test",
                        "version": "1.0.0"
                    }
                },
            ),
            wait_before: 500,
            wait_after: 500,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: [],
            timing: None,
            conditions: None,
            expectations: None,
        ),
        
        Step(
            name: "bob_mcp_initialize", 
            description: "Initialize Bob's MCP connection",
            client: "bob",
            action: (
                type: "mcp_call",
                tool: "initialize",
                arguments: {
                    "protocolVersion": "2024-11-05",
                    "capabilities": { "tools": {} },
                    "clientInfo": {
                        "name": "bob-inventory-test",
                        "version": "1.0.0"
                    }
                },
            ),
            wait_before: 500,
            wait_after: 500,
            timeout: 10000,
            success_condition: Some((
                type: "mcp_response",
                expected: "success",
            )),
            depends_on: [],
            timing: None,
            conditions: None,
            expectations: None,
        ),
    
    // Set up world and multiplayer
    (
      name: "alice_create_world",
      description: "Alice creates a simple world for inventory testing",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "create_world",
        arguments: {
          "world_name": "inventory_independent_test_world",
          "template": "default"
        },
      ),
      depends_on: ["alice_mcp_initialize"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: Some(30000),
    ),
    (
      name: "alice_publish_world",
      description: "Alice publishes the world for multiplayer",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "publish_world",
        arguments: {
          "world_name": "inventory_independent_test_world",
          "max_players": 2,
          "is_public": true
        },
      ),
      depends_on: ["alice_create_world"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    (
      name: "bob_join_world",
      description: "Bob joins Alice's world",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "join_world",
        arguments: {
          "world_id": "inventory_independent_test_world"
        },
      ),
      depends_on: ["bob_mcp_initialize", "alice_publish_world"],
      wait_before: 1000,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    
    // Set up inventories - Alice gets blocks, Bob gets none
    (
      name: "alice_get_stone_blocks",
      description: "Give Alice stone blocks in her inventory",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "give_item",
        arguments: {
          "item_type": "stone",
          "quantity": 10
        },
      ),
      depends_on: ["alice_publish_world"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    (
      name: "alice_get_dirt_blocks",
      description: "Give Alice dirt blocks in her inventory",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "give_item",
        arguments: {
          "item_type": "dirt",
          "quantity": 5
        },
      ),
      depends_on: ["alice_get_stone_blocks"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    (
      name: "alice_get_grass_blocks",
      description: "Give Alice grass blocks in her inventory",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "give_item",
        arguments: {
          "item_type": "grass",
          "quantity": 3
        },
      ),
      depends_on: ["alice_get_dirt_blocks"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    
    // Verify Bob has no blocks initially
    (
      name: "bob_check_empty_inventory",
      description: "Verify Bob has no blocks in inventory",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_inventory",
        arguments: {},
      ),
      depends_on: ["bob_join_world"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    
    // Alice places different block types
    (
      name: "alice_place_stone_block",
      description: "Alice places a stone block (Bob should see it despite having no stone)",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "place_block",
        arguments: {
          "block_type": "stone",
          "x": 10,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["alice_get_grass_blocks", "bob_check_empty_inventory"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: Some(15000),
    ),
    (
      name: "alice_place_dirt_block",
      description: "Alice places a dirt block (Bob should see it despite having no dirt)",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "place_block",
        arguments: {
          "block_type": "dirt",
          "x": 11,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["alice_place_stone_block"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: Some(15000),
    ),
    (
      name: "alice_place_grass_block",
      description: "Alice places a grass block (Bob should see it despite having no grass)",
      client: "alice",
      action: (
        type: "mcp_call",
        tool: "place_block",
        arguments: {
          "block_type": "grass",
          "x": 12,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["alice_place_dirt_block"],
      wait_before: 1000,
      wait_after: 2000,
      timeout: Some(15000),
    ),
    
    // Verification - Check that Bob sees the blocks
    (
      name: "bob_verify_stone_block",
      description: "Verify Bob can see Alice's stone block at (10,2,10)",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_block",
        arguments: {
          "x": 10,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["alice_place_grass_block"],
      wait_before: 1000,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    (
      name: "bob_verify_dirt_block",
      description: "Verify Bob can see Alice's dirt block at (11,2,10)",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_block",
        arguments: {
          "x": 11,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["bob_verify_stone_block"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    (
      name: "bob_verify_grass_block",
      description: "Verify Bob can see Alice's grass block at (12,2,10)",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_block",
        arguments: {
          "x": 12,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["bob_verify_dirt_block"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    
    // Final verification - Check Bob's inventory is still empty
    (
      name: "bob_verify_inventory_still_empty",
      description: "Verify Bob's inventory is still empty after seeing Alice's blocks",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "get_inventory",
        arguments: {},
      ),
      depends_on: ["bob_verify_grass_block"],
      wait_before: 500,
      wait_after: 1000,
      timeout: Some(15000),
    ),
    
    // Counter-test: Bob tries to place a block he doesn't have (should fail)
    (
      name: "bob_attempt_place_stone",
      description: "Bob attempts to place stone block (should fail - he has no stone)",
      client: "bob",
      action: (
        type: "mcp_call",
        tool: "place_block",
        arguments: {
          "block_type": "stone",
          "x": 13,
          "y": 2,
          "z": 10
        },
      ),
      depends_on: ["bob_verify_inventory_still_empty"],
      wait_before: 1000,
      wait_after: 1000,
      timeout: Some(15000),
    ),
  ],
  
  config: Some((
    timeout_ms: Some(300000), // 5 minutes
    logging: None,
    environment: None,
    settings: Some({
      "auto_cleanup": true,
      "preserve_logs": true,
    }),
  )),
)
